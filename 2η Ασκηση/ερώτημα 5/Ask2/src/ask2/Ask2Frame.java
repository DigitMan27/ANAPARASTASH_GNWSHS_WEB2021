/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ask2;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.jena.rdf.model.*;
import org.apache.jena.query.Query ;
import org.apache.jena.query.QueryExecution ;
import org.apache.jena.query.QueryExecutionFactory ;
import org.apache.jena.query.QueryFactory ;
import org.apache.jena.query.QuerySolution ;
import org.apache.jena.query.ResultSet ;
import org.apache.jena.atlas.io.IndentedWriter;
import org.apache.jena.util.FileManager;
import java.io.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hive
 */
public class Ask2Frame extends javax.swing.JFrame {

    /**
     * Creates new form Ask2Frame
     */
    // My Declarations
    private File file;
    private Model model;
    private String URI;
    // End
    public Ask2Frame() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        Exit_btn = new javax.swing.JButton();
        open_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        path_label = new javax.swing.JLabel();
        dataCategory = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        uri_value = new javax.swing.JTextField();
        stmt_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ασκηση 2");
        setBackground(new java.awt.Color(177, 73, 73));
        setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Τμήματα"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataTable);

        Exit_btn.setText("Exit");
        Exit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exit_btnActionPerformed(evt);
            }
        });

        open_btn.setText("Open File");
        open_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                open_btnActionPerformed(evt);
            }
        });

        jLabel1.setText("Filename:");

        path_label.setText("....");

        dataCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Professor", "Student", "Department", "Lesson", "Classroom" }));
        dataCategory.setEnabled(false);
        dataCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataCategoryActionPerformed(evt);
            }
        });

        jLabel2.setText("Add Data:");

        jLabel3.setText("URI:");

        stmt_btn.setText("Show Statements");
        stmt_btn.setEnabled(false);
        stmt_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stmt_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Exit_btn)
                                .addGap(18, 18, 18)
                                .addComponent(open_btn)
                                .addGap(18, 18, 18)
                                .addComponent(stmt_btn)))
                        .addContainerGap(15, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(uri_value))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(path_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dataCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(path_label)
                    .addComponent(jLabel2)
                    .addComponent(dataCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(uri_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Exit_btn)
                    .addComponent(open_btn)
                    .addComponent(stmt_btn))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Exit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exit_btnActionPerformed
         this.dispose();
    }//GEN-LAST:event_Exit_btnActionPerformed
    // A erwthma
    private void open_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_open_btnActionPerformed
        FileFilter filter = new FileNameExtensionFilter("RDF file", "rdf");
        jFileChooser.addChoosableFileFilter(filter);
        jFileChooser.setFileFilter(filter);
        DefaultTableModel tableModel =(DefaultTableModel) dataTable.getModel();
        int returnVal = jFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = jFileChooser.getSelectedFile();
            String path = file.getAbsolutePath();
            path_label.setText(file.getName());
            InputStream in = FileManager.get().open(path);
            model = ModelFactory.createDefaultModel();
            model.read(in,"");
           // model.write(System.out);
            String queryString = "PREFIX univ: <http://www.mydomain.org/univ/> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/22-rdf-schema#> SELECT ?x {?x rdf:type univ:Department . }";
            Query query = QueryFactory.create(queryString);
            query.serialize(new IndentedWriter(System.out,true));
            QueryExecution qexec = QueryExecutionFactory.create(query,model);
            ResultSet rs = qexec.execSelect();
            for (; rs.hasNext();){
                QuerySolution rb = rs.nextSolution();
                RDFNode x = rb.get("x");
                System.out.println(x.toString());
                tableModel.addRow(new Object[]{x});  
            }
            URI = "http://www.mydomain.org/univ/";
        }
        dataCategory.setEnabled(true);
        stmt_btn.setEnabled(true);
    }//GEN-LAST:event_open_btnActionPerformed

    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked

        InputStream in = FileManager.get().open(file.getAbsolutePath());
        model.read(in,"");
        
        int row = dataTable.getSelectedRow();
        int col = 0;
        Object department = dataTable.getValueAt(row,col);
        String str_dep = department.toString();
        System.out.printf("Dep! "+str_dep);
        System.out.printf("Clicked! %d \n",dataTable.getSelectedRow());
        
       // dataWindow.setVisible(true);
        Literal title=null, 
                name = null, 
                age=null, 
                phone=null,
                cap=null,
                taught_by=null;
        AllData dataWindow = new AllData();
        
        String queryString = "PREFIX univ: <http://www.mydomain.org/univ/>"+
                "PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>"+
                "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>" +
                "PREFIX rdfs: <http://www.w3.org/2000/01/22-rdf-schema#>"+
                "SELECT ?name WHERE {?x rdf:type univ:Department ; univ:dep_name ?name . "+
                "FILTER(?x=<"+str_dep+">)"+
                "}";
        Query query = QueryFactory.create(queryString);
        query.serialize(new IndentedWriter(System.out, true));
        QueryExecution qexec = QueryExecutionFactory.create(query, model);
        ResultSet rs = qexec.execSelect();
        if(rs.hasNext()){
            for (; rs.hasNext();){
                    QuerySolution rb = rs.nextSolution();
                    title = rb.getLiteral("name");
                    System.out.printf("Dep! " + title.toString());
            }
            qexec.close();
            dataWindow.setTitle("Τμήμα "+title.toString());
        }else{
            JOptionPane.showMessageDialog(this, "Το Τμήμα που επέλεξες δέν έχει δεδομένα.");
            return;
        }
           
    
        String ProfQuerystr = "PREFIX univ: <http://www.mydomain.org/univ/>"
                + "PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>"
                + "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>"
                + "PREFIX rdfs: <http://www.w3.org/2000/01/22-rdf-schema#>"
                + "SELECT ?name ?age ?phone WHERE { ?x rdf:type univ:Professor . ?x univ:has_name ?name . ?x univ:has_age ?age . ?x univ:has_phone ?phone ."
                + "?x univ:member_of ?dep ."
                + "FILTER(?dep=<"+str_dep+">)}";
        Query prof_query = QueryFactory.create(ProfQuerystr);
        prof_query.serialize(new IndentedWriter(System.out, true));
        QueryExecution p_qexec = QueryExecutionFactory.create(prof_query, model);
        ResultSet p_rs = p_qexec.execSelect();
        for (; p_rs.hasNext();) {
            QuerySolution p_rb = p_rs.nextSolution();
            name = p_rb.getLiteral("name");
            age = p_rb.getLiteral("age");
            phone = p_rb.getLiteral("phone");
            System.out.printf("Dep! " + name.toString());
            dataWindow.writeToTable("professor",name.toString(),age.toString(),phone.toString());
        }
        p_qexec.close();
        
        String StudQuerystr = "PREFIX univ: <http://www.mydomain.org/univ/>"
                + "PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>"
                + "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>"
                + "PREFIX rdfs: <http://www.w3.org/2000/01/22-rdf-schema#>"
                + "SELECT ?name ?age ?phone WHERE { ?x rdf:type univ:Student . ?x univ:has_name ?name . ?x univ:has_age ?age . ?x univ:has_phone ?phone ."
                + "?x univ:member_of ?dep ."
                + "FILTER(?dep=<" + str_dep + ">)}";
        Query stud_query = QueryFactory.create(StudQuerystr);
        stud_query.serialize(new IndentedWriter(System.out, true));
        QueryExecution s_qexec = QueryExecutionFactory.create(stud_query, model);
        ResultSet s_rs = s_qexec.execSelect();
        for (; s_rs.hasNext();) {
            QuerySolution s_rb = s_rs.nextSolution();
            name = s_rb.getLiteral("name");
            age = s_rb.getLiteral("age");
            phone = s_rb.getLiteral("phone");
            System.out.printf("Dep! " + name.toString());
            dataWindow.writeToTable("student", name.toString(), age.toString(), phone.toString());
        }
        s_qexec.close();
        
        String ClassQuerystr = "PREFIX univ: <http://www.mydomain.org/univ/>"
                + "PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>"
                + "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>"
                + "PREFIX rdfs: <http://www.w3.org/2000/01/22-rdf-schema#>"
                + "SELECT ?name ?capacity WHERE { ?x rdf:type univ:Classroom . ?x univ:room_name ?name . ?x univ:room_capacity ?capacity ."
                + "?x univ:room_department ?dep ."
                + "FILTER(?dep=<" + str_dep + ">)}";
        Query class_query = QueryFactory.create(ClassQuerystr);
        class_query.serialize(new IndentedWriter(System.out, true));
        QueryExecution c_qexec = QueryExecutionFactory.create(class_query, model);
        ResultSet c_rs = c_qexec.execSelect();
        for (; c_rs.hasNext();) {
            QuerySolution c_rb = c_rs.nextSolution();
            name = c_rb.getLiteral("name");
            cap = c_rb.getLiteral("capacity");
            System.out.printf("Dep! " + name.toString());
            dataWindow.writeToTable("classroom", name.toString(), cap.toString(),"");
        }
        c_qexec.close();
        
        String LessonQuerystr = "PREFIX univ: <http://www.mydomain.org/univ/>"
                + "PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>"
                + "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>"
                + "PREFIX rdfs: <http://www.w3.org/2000/01/22-rdf-schema#>"
                + "SELECT ?name ?teacher WHERE { ?prof rdf:type univ:Professor . ?prof univ:teaches ?y . ?y univ:les_name ?name . ?prof univ:has_name ?teacher ."
                + "?prof univ:member_of ?dep ."
                + "FILTER(?dep=<" + str_dep + ">)}";
        Query lesson_query = QueryFactory.create(LessonQuerystr);
        lesson_query.serialize(new IndentedWriter(System.out, true));
        QueryExecution l_qexec = QueryExecutionFactory.create(lesson_query, model);
        ResultSet l_rs = l_qexec.execSelect();
        for (; l_rs.hasNext();) {
            QuerySolution l_rb = l_rs.nextSolution();
            name = l_rb.getLiteral("name");
            taught_by = l_rb.getLiteral("teacher");
            System.out.printf("Dep! " + name.toString());
            dataWindow.writeToTable("lessons", name.toString(), taught_by.toString(),"");
        }
        l_qexec.close();
        
        dataWindow.setVisible(true);
    }//GEN-LAST:event_dataTableMouseClicked
    // B erwthma
    private void dataCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataCategoryActionPerformed
        // TODO add your handling code here:
        String ch = dataCategory.getSelectedItem().toString();
        System.out.println("DataChoses:"+ch);
        if(ch.equals("Professor")){
            ProfessorData pd = new ProfessorData();
            pd.getModel(model,URI,file.getAbsolutePath());
            pd.setVisible(true);
            //System.out.println("ClickedAdd");
            //model = pd.model;
        }else if(ch.equals("Lesson")){
            LessonData ld = new LessonData();
            ld.getModel(model,URI,file.getAbsolutePath());
            ld.setVisible(true);
        }else if(ch.equals("Student")){
            StudentData sd = new StudentData();
            sd.getModel(model,URI,file.getAbsolutePath());
            sd.setVisible(true);
        }else if(ch.equals("Department")){
            DepartmentData dd = new DepartmentData();
            DefaultTableModel tableModel =(DefaultTableModel) dataTable.getModel();
            dd.getModelTable(model,URI,file.getAbsolutePath(),tableModel);
            dd.setVisible(true);
        }else if(ch.equals("Classroom")){
            ClassroomData cd = new ClassroomData();
            cd.getModel(model,URI,file.getAbsolutePath());
            cd.setVisible(true);
        }
    }//GEN-LAST:event_dataCategoryActionPerformed

    private void stmt_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stmt_btnActionPerformed
        // TODO add your handling code here:
        String text = uri_value.getText();
        Boolean contains = text.contains(URI);
        if(text.equals("") || !contains ){
            JOptionPane.showMessageDialog(this, "Λάθος URI.");
        }else{
            StatementData stmts = new StatementData();
            InfModel inf_model = ModelFactory.createRDFSModel(model);
            Resource infr = inf_model.getResource(text);
            StmtIterator iter  = infr.listProperties();
            while(iter.hasNext()){
                Statement stmt = iter.nextStatement();
                System.out.print(" " + stmt.getSubject().toString());
                System.out.print(" " + stmt.getPredicate().toString());
                System.out.print(" " + stmt.getObject().toString());
                System.out.print("\n");
                stmts.addToTable(stmt.getSubject().toString(), stmt.getPredicate().toString(), stmt.getObject().toString());
            }
            
            stmts.setVisible(true);
        }
    }//GEN-LAST:event_stmt_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ask2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ask2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ask2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ask2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ask2Frame().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit_btn;
    private javax.swing.JComboBox<String> dataCategory;
    private javax.swing.JTable dataTable;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton open_btn;
    private javax.swing.JLabel path_label;
    private javax.swing.JButton stmt_btn;
    private javax.swing.JTextField uri_value;
    // End of variables declaration//GEN-END:variables
}
